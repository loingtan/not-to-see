services:
  postgres:
    image: postgres:15-alpine
    container_name: course_registration_postgres
    environment:
      POSTGRES_DB: course_registration
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password123
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
      - ./scripts/database_schema.sql:/docker-entrypoint-initdb.d/01-schema.sql
    command:
      [
        "postgres",
        "-c",
        "shared_buffers=512MB",
        "-c",
        "effective_cache_size=1536MB",
        "-c",
        "work_mem=16MB",
        "-c",
        "maintenance_work_mem=256MB",
        "-c",
        "max_connections=200",
        "-c",
        "checkpoint_timeout=15min",
        "-c",
        "max_wal_size=2GB",
        "-c",
        "min_wal_size=512MB",
        "-c",
        "max_worker_processes=2",
        "-c",
        "max_parallel_workers=2",
        "-c",
        "max_parallel_workers_per_gather=1",
        "-c",
        "log_min_duration_statement=100ms",
      ]
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "postgres", "-d", "course_registration"]
      interval: 5s
      timeout: 5s
      retries: 10
    restart: unless-stopped
    networks:
      - app-network
    deploy:
      resources:
        limits:
          cpus: "2"
          memory: 2G
        reservations:
          cpus: "0.25"
          memory: 256M

  redis-master:
    image: redis:7-alpine
    container_name: course_registration_redis_master
    hostname: redis-master
    command: ["redis-server", "/usr/local/etc/redis/redis.conf"]
    ports:
      - "6379:6379"
    volumes:
      - ./redis-configs/redis-master.conf:/usr/local/etc/redis/redis.conf
      - redis-master-data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 5s
      retries: 10
    restart: unless-stopped
    networks:
      - app-network
    deploy:
      resources:
        limits:
          cpus: "2"
          memory: 2G
        reservations:
          cpus: "0.1"
          memory: 128M

  redis-slave-1:
    image: redis:7-alpine
    container_name: course_registration_redis_slave_1
    hostname: redis-slave-1
    command: ["redis-server", "/usr/local/etc/redis/redis.conf"]
    ports:
      - "6380:6379"
    volumes:
      - ./redis-configs/redis-slave.conf:/usr/local/etc/redis/redis.conf
      - redis-slave-1-data:/data
    depends_on:
      redis-master:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 5s
      retries: 10
    restart: unless-stopped
    networks:
      - app-network
    deploy:
      resources:
        limits:
          cpus: "2"
          memory: 2G
        reservations:
          cpus: "0.1"
          memory: 64M

  redis-slave-2:
    image: redis:7-alpine
    container_name: course_registration_redis_slave_2
    hostname: redis-slave-2
    command: ["redis-server", "/usr/local/etc/redis/redis.conf"]
    ports:
      - "6381:6379"
    volumes:
      - ./redis-configs/redis-slave.conf:/usr/local/etc/redis/redis.conf
      - redis-slave-2-data:/data
    depends_on:
      redis-master:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 5s
      retries: 10
    restart: unless-stopped
    networks:
      - app-network
    deploy:
      resources:
        limits:
          cpus: "2"
          memory: 2G
        reservations:
          cpus: "0.1"
          memory: 64M
  redis-sentinel-1:
    image: redis:7-alpine
    container_name: course_registration_redis_sentinel_1
    hostname: redis-sentinel-1
    command: ["redis-sentinel", "/usr/local/etc/redis/sentinel.conf"]
    ports:
      - "26379:26379"
    volumes:
      - ./redis-configs/sentinel.conf:/usr/local/etc/redis/sentinel.conf
    depends_on:
      redis-master:
        condition: service_healthy
      redis-slave-1:
        condition: service_healthy
      redis-slave-2:
        condition: service_healthy
    restart: unless-stopped
    networks:
      - app-network
    deploy:
      resources:
        limits:
          cpus: "0.10"
          memory: 128M
        reservations:
          cpus: "0.05"
          memory: 32M

  redis-sentinel-2:
    image: redis:7-alpine
    container_name: course_registration_redis_sentinel_2
    hostname: redis-sentinel-2
    command: ["redis-sentinel", "/usr/local/etc/redis/sentinel.conf"]
    ports:
      - "26380:26379"
    volumes:
      - ./redis-configs/sentinel.conf:/usr/local/etc/redis/sentinel.conf
    depends_on:
      redis-master:
        condition: service_healthy
      redis-slave-1:
        condition: service_healthy
      redis-slave-2:
        condition: service_healthy
    restart: unless-stopped
    networks:
      - app-network
    deploy:
      resources:
        limits:
          cpus: "0.10"
          memory: 128M
        reservations:
          cpus: "0.05"
          memory: 32M

  redis-sentinel-3:
    image: redis:7-alpine
    container_name: course_registration_redis_sentinel_3
    hostname: redis-sentinel-3
    command: ["redis-sentinel", "/usr/local/etc/redis/sentinel.conf"]
    ports:
      - "26381:26379"
    volumes:
      - ./redis-configs/sentinel.conf:/usr/local/etc/redis/sentinel.conf
    depends_on:
      redis-master:
        condition: service_healthy
      redis-slave-1:
        condition: service_healthy
      redis-slave-2:
        condition: service_healthy
    restart: unless-stopped
    networks:
      - app-network
    deploy:
      resources:
        limits:
          cpus: "0.10"
          memory: 128M
        reservations:
          cpus: "0.05"
          memory: 32M

networks:
  app-network:
    driver: bridge

volumes:
  pgdata:
  redis-master-data:
  redis-slave-1-data:
  redis-slave-2-data:
